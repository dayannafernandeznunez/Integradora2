package model: 

import java.util.ArrayList;
import java.util.List;

/**
 * Class representing a team in the tournament.
 */
public class Team {
    private String name;
    private String country;
    private String coach;
    private List<Player> players;

    /**
     * Constructor for the Team class.
     * @param name The name of the team.
     * @param country The country the team represents.
     * @param coach The coach of the team.
     */
    public Team(String name, String country, String coach) {
        setName(name);
        setCountry(country);
        setCoach(coach);
        this.players = new ArrayList<>();
    }

    /**
     * Gets the name of the team.
     * @return The name of the team.
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the name of the team.
     * @param name The name to set.
     * @throws IllegalArgumentException if the name is null or empty.
     */
    public void setName(String name) {
        if (name == null || name.trim().isEmpty()) {
            throw new IllegalArgumentException("Team name cannot be empty.");
        }
        this.name = name;
    }

    /**
     * Gets the country the team represents.
     * @return The country of the team.
     */
    public String getCountry() {
        return country;
    }

    /**
     * Sets the country of the team.
     * @param country The country to set.
     * @throws IllegalArgumentException if the country is null or empty.
     */
    public void setCountry(String country) {
        if (country == null || country.trim().isEmpty()) {
            throw new IllegalArgumentException("Country cannot be empty.");
        }
        this.country = country;
    }

    /**
     * Gets the coach of the team.
     * @return The coach of the team.
     */
    public String getCoach() {
        return coach;
    }

    /**
     * Sets the coach of the team.
     * @param coach The coach to set.
     * @throws IllegalArgumentException if the coach is null or empty.
     */
    public void setCoach(String coach) {
        if (coach == null || coach.trim().isEmpty()) {
            throw new IllegalArgumentException("Coach cannot be empty.");
        }
        this.coach = coach;
    }

    /**
     * Adds a player to the team.
     * @param player The player to add.
     * @throws IllegalArgumentException if the player is null.
     */
    public void addPlayer(Player player) {
        if (player == null) {
            throw new IllegalArgumentException("Player cannot be null.");
        }
        this.players.add(player);
    }

    /**
     * Gets the list of players on the team.
     * @return The list of players.
     */
    public List<Player> getPlayers() {
        return players;
    }
}
